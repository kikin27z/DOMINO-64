/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package implementacion;

import abstraccion.ICliente;
import com.luisa.entidades.Cuenta;
import com.luisa.entidades.Partida;
import domino64.eventos.base.Evento;
import domino64.eventos.base.error.EventoError;
import domino64.eventos.base.error.TipoError;
/*import eventos.EventoJugador;
import eventos.EventoLogico;
import eventos.EventoLobby;*/
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import javax.swing.JOptionPane;
import observer.Observer;
/*
import tiposLogicos.TipoSuscripcion;
import tiposLogicos.TipoLogicaLobby;
import tiposLogicos.TipoLogicaPartida;
import tiposLogicos.TipoLogicaTablero;
import tiposLogicos.TipoLogicaTurno;
import tiposLogicos.TiposJugador;*/

/**
 *
 * @author luisa M
 */
public class Frame extends javax.swing.JFrame implements Observer<Evento>{
    private Cuenta cuenta;
    private ICliente cliente;
    private Partida partida;
    private List<Enum<?>> tiposEvento;
    private final int AGREGAR = 0;
    private final int ELIMINAR = 1;
    /**
     * Creates new form Frame
     */
    public Frame() {
        Scanner s = new Scanner(System.in);
        System.out.println("ingresa el id para la cuenta: ");
        String idCuenta = s.next();
        
        initComponents();
        //cuenta = new Cuenta(idCuenta);
        //cliente = new Client(5000, cuenta.getId(),this);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCrear = new javax.swing.JButton();
        btnUnirse = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaJugadores = new javax.swing.JTextArea();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCrear.setText("crear partida");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnUnirse.setText("unirse partida");
        btnUnirse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnirseActionPerformed(evt);
            }
        });

        areaJugadores.setColumns(20);
        areaJugadores.setRows(5);
        jScrollPane1.setViewportView(areaJugadores);

        btnSalir.setText("abandonar partida");
        btnSalir.setToolTipText("");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUnirse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                        .addComponent(btnCrear)
                        .addGap(142, 142, 142))))
            .addGroup(layout.createSequentialGroup()
                .addGap(213, 213, 213)
                .addComponent(btnSalir)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrear)
                    .addComponent(btnUnirse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSalir)
                .addGap(61, 61, 61))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        // TODO add your handling code here:
//        EventoJugador evento = new EventoJugador(TiposJugador.CREAR_PARTIDA);
//        partida = new Partida(new ArrayList<>(List.of(cuenta)),4);
////        evento.agregarInfo(partida);
//        evento.setJugador(cuenta);
//        evento.setIdPublicador(cuenta.getId());
//        
//        cliente.enviarEvento(evento);//le envia el evento al servidor
//        
//        cambiarVista(true);
//        String jugadores = actualizarJugadores(cuenta, AGREGAR);
//        this.areaJugadores.setText(jugadores);
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnUnirseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnirseActionPerformed
//        // TODO add your handling code here:
//        String codigoPartida = JOptionPane.showInputDialog("ingresa el codigo de la partida:");
//        partida = new Partida(codigoPartida);
//        EventoJugador evento = new EventoJugador(TiposJugador.UNIRSE_PARTIDA);
////        evento.agregarInfo(partida);
//        evento.setJugador(cuenta);
//        evento.setIdPublicador(cuenta.getId());
//        
//        cliente.enviarEvento(evento);
    }//GEN-LAST:event_btnUnirseActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
//        EventoJugador evento = new EventoJugador(TiposJugador.ABANDONAR_PARTIDA);
//        evento.setJugador(cuenta);
//        evento.setIdPublicador(cuenta.getId());
//        
//        cliente.enviarEvento(evento);
//        cambiarVista(false);
//        this.areaJugadores.setText("");
    }//GEN-LAST:event_btnSalirActionPerformed

    private void cambiarVista(boolean enPartida){
        this.btnCrear.setVisible(!enPartida);
        this.btnUnirse.setVisible(!enPartida);
        this.btnSalir.setVisible(enPartida);
    }
    
    private String actualizarJugadores(Cuenta jugador, int accion){
        StringBuilder str = new StringBuilder(this.areaJugadores.getText());
        if(accion == AGREGAR){
            str.append('\n').append(jugador.getId());
        }else if(accion == ELIMINAR){
            int index = str.indexOf(String.valueOf(jugador.getId()));
            int end = index+(jugador.getId());
            str.delete(index, end);
        }
        return str.toString();
        //this.areaJugadores.setText(str.toString());
    }
    
    private void entrarPartida(Partida partida){
        StringBuilder str = new StringBuilder();
        for (Cuenta jugador : partida.getJugadores()) {
            str.append(jugador.getId()).append("\n");
        }
        this.areaJugadores.setText(str.toString());
        cambiarVista(true);
    }
    
    private void mostrarError(Evento error){
        EventoError err = (EventoError)error;
        JOptionPane.showMessageDialog(this, "Hubo un error de tipo "+
                err.getTipo().toString()+"\n"
                +err.getInfo());
    }
    
    private void manejarEvento(Evento evento){
//        EventoJugador eventoJ = (EventoJugador)evento;
//        TipoLogicaLobby tipo = (TipoLogicaLobby) eventoJ.getTipo();
//
//        switch (tipo) {
//            case JUGADOR_NUEVO -> {
//                Cuenta jugadorEvento = (Cuenta) eventoJ.getInfo();
//                this.areaJugadores.setText(actualizarJugadores(jugadorEvento, AGREGAR));
//            }
////            case UNIRSE_PARTIDA -> {
////                partida = (Partida) eventoJ.getInfo();
////                entrarPartida(partida);
////            }
//            case JUGADOR_SALIO -> {
//                Cuenta exJugador = (Cuenta) eventoJ.getInfo();
//                this.areaJugadores.setText(actualizarJugadores(exJugador, ELIMINAR));
//            }
//        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaJugadores;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnUnirse;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Evento observable) {
        System.out.println("en el update");
        if(observable.getTipo() instanceof TipoError){
            mostrarError(observable);
        }else{
            manejarEvento(observable);
        }
    }
    
}
